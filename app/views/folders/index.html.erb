<div class="folders-container">
  <div class="header">
    <div class="header-main">
      <h1>Gestión de Documentos</h1>
      <div class="header-stats">
        <span><i class="fas fa-users"></i> <%= accessible_profiles_for_user(current_user).count %> departamentos</span>
        <span><i class="fas fa-folder"></i> <%= @folders.count %> carpetas</span>
      </div>
    </div>
    <button class="btn-create" onclick="openCreateModal()">
      <i class="fas fa-plus"></i>
      Nueva Carpeta
    </button>
  </div>

  <div class="body">
    <div class="controls-section">
      <div class="controls-row">
        <div class="search-box">
          <i class="fas fa-search"></i>
          <input 
            type="text" 
            id="fileSearchInput" 
            placeholder="Buscar archivos, carpetas o usuarios..."
            autocomplete="off"
          >
          <button id="searchClearBtn" class="clear-btn" style="display: none;">
            <i class="fas fa-times"></i>
          </button>
        </div>
        
        <div class="department-selector">
          <div class="selector-wrapper">
            <button class="selector-btn" onclick="toggleDepartmentDropdown()">
              <i class="fas fa-building"></i>
              <span id="selectedDepartment">Todos los Departamentos</span>
              <i class="fas fa-chevron-down"></i>
            </button>
            <div id="departmentDropdown" class="dropdown-menu">
              <div class="dropdown-item active" data-filter="all">
                <span class="item-name">Todos los Departamentos</span>
                <span class="item-count"><%= @folders.count %></span>
              </div>
              <% accessible_profiles_for_user(current_user).each do |profile| %>
                <div class="dropdown-item" data-filter="<%= profile.id %>">
                  <span class="item-name"><%= profile.name %></span>
                  <span class="item-count"><%= profile.folders.count %></span>
                </div>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div id="searchResults" class="search-results" style="display: none;">
      <div id="searchResultsList" class="search-results-list"></div>
    </div>

    <div class="departments-section">
      <% accessible_profiles_for_user(current_user).each do |profile| %>
        <% profile_folders = @folders.select { |folder_data| folder_data[:folder].profiles.any? { |p| p.id == profile.id } } %>
        <% next if profile_folders.empty? %>
        
        <div class="department-group" data-department="<%= profile.id %>">
          <h2 class="department-title"><%= profile.name %></h2>
          
          <div class="folders-grid">
            <% profile_folders.each do |folder_data| %>
              <% folder = folder_data[:folder] %>
              <% can_edit = folder_data[:can_edit] %>
              <% has_files = folder.documents.any? %>
              <% has_subfolders = folder.subfolders.any? %>
              
              <div class="folder-card <%= 'has-files' if has_files %> <%= 'has-subfolders' if has_subfolders %>">
                <div class="card-content">
                  <div class="card-main">
                    <div class="folder-header">
                      <div class="folder-icon-wrapper">
                        <div class="folder-icon">
                          <i class="fas fa-folder"></i>
                        </div>
                        <div class="folder-status-indicators">
                          <% if has_files %>
                            <div class="status-dot files" title="Tiene archivos"></div>
                          <% end %>
                          <% if has_subfolders %>
                            <div class="status-dot subfolders" title="Tiene subcarpetas"></div>
                          <% end %>
                        </div>
                      </div>
                      
                      <div class="folder-info">
                        <h3 class="folder-name"><%= folder.name %></h3>
                        <div class="folder-meta">
                          <div class="meta-row">
                            <span class="meta-item">
                              <i class="fas fa-user"></i>
                              <%= folder.user.fullname %>
                            </span>
                            <span class="meta-item">
                              <i class="fas fa-calendar"></i>
                              <%= folder.created_at.strftime('%d/%m/%Y') %>
                            </span>
                          </div>
                          <div class="meta-row">
                            <span class="meta-item">
                              <i class="fas fa-file"></i>
                              <%= folder.documents.count %> archivos
                            </span>
                            <span class="meta-item">
                              <i class="fas fa-folder-tree"></i>
                              <%= folder.subfolders.count %> subcarpetas
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <div class="folder-actions">
                      <a href="<%= folder_path(folder) %>" class="action-btn primary">
                        <i class="fas fa-eye"></i>
                        Ver
                      </a>
                      <% if can_edit %>
                        <a href="<%= edit_folder_path(folder) %>" class="action-btn secondary">
                          <i class="fas fa-edit"></i>
                          Editar
                        </a>
                      <% end %>
                    </div>
                  </div>
                  
                  <div class="card-hover-overlay">
                    <div class="overlay-content">
                      <div class="overlay-icon">
                        <i class="fas fa-folder-open"></i>
                      </div>
                      <span>Acceder a la carpeta</span>
                    </div>
                  </div>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </div>

  <div id="createFolderModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>Crear Nueva Carpeta</h2>
        <button class="modal-close" onclick="closeCreateModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <%= form_with(model: Folder.new, local: true, class: 'create-folder-form') do |form| %>
        <div class="form-group">
          <label for="folder_name">Nombre de la Carpeta</label>
          <%= form.text_field :name, class: 'form-input', required: true, placeholder: 'Ej: Documentos Q1 2024' %>
        </div>
        
        <div class="form-group">
          <label for="folder_description">Descripción (opcional)</label>
          <%= form.text_area :description, class: 'form-textarea', rows: 3, placeholder: 'Describe el propósito de esta carpeta...' %>
        </div>
        
        <div class="form-group">
          <label for="folder_profile_id">Departamento</label>
          <%= form.select :profile_id, 
              accessible_profiles_for_user(current_user).map { |p| [p.name, p.id] },
              { prompt: 'Selecciona un departamento' },
              { class: 'form-select', required: true } %>
        </div>
        
        <div class="form-actions">
          <button type="button" class="btn-secondary" onclick="closeCreateModal()">Cancelar</button>
          <%= form.submit 'Crear Carpeta', class: 'btn-primary' %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<style>
:root {
  --primary: #6366f1;
  --primary-light: #818cf8;
  --primary-dark: #4f46e5;
  --success: #10b981;
  --info: #06b6d4;
  --warning: #f59e0b;
  --text-primary: #1e293b;
  --text-secondary: #64748b;
  --text-muted: #94a3b8;
  --bg-primary: #ffffff;
  --bg-secondary: #f8fafc;
  --bg-tertiary: #f1f5f9;
  --border-light: #e2e8f0;
  --border-medium: #cbd5e1;
  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1);
  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1);
  --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1);
  --radius-sm: 0.375rem;
  --radius-md: 0.5rem;
  --radius-lg: 0.75rem;
  --radius-xl: 1rem;
  --spacing-xs: 0.5rem;
  --spacing-sm: 0.75rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;
  --spacing-xl: 2rem;
  --spacing-2xl: 3rem;
}

* {
  box-sizing: border-box;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  background: var(--bg-secondary);
  color: var(--text-primary);
  line-height: 1.6;
  margin: 0;
}

.folders-container {
  max-width: 1400px;
  margin: 0 auto;
  padding: var(--spacing-xl);
}

.header {
  background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
  border-radius: var(--radius-xl) var(--radius-xl) 0 0;
  padding: var(--spacing-2xl);
  margin-bottom: 0;
  color: white;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: var(--shadow-xl);
}

.header-main h1 {
  margin: 0 0 var(--spacing-sm) 0;
  font-size: 2.5rem;
  font-weight: 800;
  line-height: 1.2;
}

.header-stats {
  display: flex;
  gap: var(--spacing-lg);
  font-size: 0.875rem;
  opacity: 0.9;
}

.header-stats span {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.btn-create {
  background: rgba(255, 255, 255, 0.2);
  border: 2px solid rgba(255, 255, 255, 0.3);
  color: white;
  padding: var(--spacing-md) var(--spacing-lg);
  border-radius: var(--radius-lg);
  font-weight: 600;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  font-size: 1rem;
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
}

.btn-create:hover {
  background: rgba(255, 255, 255, 0.3);
  border-color: rgba(255, 255, 255, 0.5);
  transform: translateY(-2px);
}

.body {
  background: var(--bg-primary);
  border-radius: 0 0 var(--radius-xl) var(--radius-xl);
  padding: var(--spacing-2xl);
  box-shadow: var(--shadow-md);
  border: 1px solid var(--border-light);
  border-top: none;
}

.controls-section {
  margin-bottom: var(--spacing-2xl);
}

.controls-row {
  display: flex;
  align-items: center;
  gap: var(--spacing-xl);
}

.search-box {
  position: relative;
  flex: 1;
  max-width: 600px;
}

.search-box i {
  position: absolute;
  left: var(--spacing-md);
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-muted);
  font-size: 1.125rem;
}

.search-box input {
  width: 100%;
  padding: var(--spacing-md) var(--spacing-md) var(--spacing-md) 3rem;
  border: 2px solid var(--border-light);
  border-radius: var(--radius-lg);
  font-size: 1rem;
  background: var(--bg-secondary);
  transition: all 0.3s ease;
}

.search-box input:focus {
  outline: none;
  border-color: var(--primary);
  background: var(--bg-primary);
  box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.1);
}

.clear-btn {
  position: absolute;
  right: var(--spacing-md);
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  color: var(--text-muted);
  cursor: pointer;
  padding: var(--spacing-xs);
  border-radius: 50%;
  transition: all 0.2s;
}

.clear-btn:hover {
  background: var(--bg-tertiary);
  color: var(--text-secondary);
}

.department-selector {
  flex-shrink: 0;
}

.selector-wrapper {
  position: relative;
  min-width: 280px;
}

.selector-btn {
  background: var(--bg-primary);
  border: 2px solid var(--border-light);
  color: var(--text-primary);
  padding: var(--spacing-md) var(--spacing-lg);
  border-radius: var(--radius-lg);
  cursor: pointer;
  font-weight: 500;
  transition: all 0.3s ease;
  font-size: 1rem;
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  width: 100%;
  justify-content: space-between;
  box-shadow: var(--shadow-sm);
}

.selector-btn:hover {
  border-color: var(--primary);
  background: var(--bg-secondary);
  box-shadow: var(--shadow-md);
  transform: translateY(-1px);
}

.selector-btn i:first-child {
  color: var(--primary);
  font-size: 1.125rem;
}

.selector-btn i:last-child {
  color: var(--text-muted);
  transition: transform 0.3s ease;
}

.selector-btn.active i:last-child {
  transform: rotate(180deg);
}

.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background: var(--bg-primary);
  border: 2px solid var(--border-light);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-xl);
  margin-top: var(--spacing-sm);
  max-height: 300px;
  overflow-y: auto;
  z-index: 100;
  opacity: 0;
  visibility: hidden;
  transform: translateY(-10px);
  transition: all 0.3s ease;
}

.dropdown-menu.show {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.dropdown-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-md) var(--spacing-lg);
  cursor: pointer;
  transition: all 0.2s ease;
  border-bottom: 1px solid var(--border-light);
}

.dropdown-item:last-child {
  border-bottom: none;
}

.dropdown-item:hover {
  background: var(--bg-secondary);
}

.dropdown-item.active {
  background: var(--primary);
  color: white;
}

.item-name {
  font-weight: 500;
}

.item-count {
  background: rgba(255, 255, 255, 0.2);
  padding: 0.25rem 0.5rem;
  border-radius: var(--radius-sm);
  font-size: 0.75rem;
  font-weight: 600;
}

.dropdown-item.active .item-count {
  background: rgba(255, 255, 255, 0.3);
}

.search-results {
  background: var(--bg-primary);
  border: 1px solid var(--border-light);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-xl);
  margin-bottom: var(--spacing-xl);
  max-height: 400px;
  overflow-y: auto;
}

.search-results-list {
  padding: 0;
  margin: 0;
}

.search-result-item {
  padding: var(--spacing-md);
  border-bottom: 1px solid var(--border-light);
  cursor: pointer;
  transition: background-color 0.2s;
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
}

.search-result-item:hover,
.search-result-item.selected {
  background: var(--bg-secondary);
}

.search-result-item:last-child {
  border-bottom: none;
}

.search-result-item i {
  color: var(--primary);
  width: 20px;
}

.departments-section {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-2xl);
}

.department-group {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
}

.department-title {
  margin: 0;
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--text-primary);
  padding-bottom: var(--spacing-sm);
  border-bottom: 2px solid var(--border-light);
}

.folders-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: var(--spacing-lg);
}

.folder-card {
  background: var(--bg-primary);
  border: 1px solid var(--border-light);
  border-radius: var(--radius-xl);
  overflow: hidden;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: var(--shadow-sm);
  position: relative;
  cursor: pointer;
}

.folder-card:hover {
  border-color: var(--primary);
  box-shadow: var(--shadow-xl);
  transform: translateY(-8px) scale(1.02);
}

.folder-card.has-files {
  border-left: 4px solid var(--success);
}

.folder-card.has-subfolders {
  border-left: 4px solid var(--info);
}

.folder-card.has-files.has-subfolders {
  border-left: 4px solid var(--warning);
}

.card-content {
  position: relative;
  height: 100%;
}

.card-main {
  padding: var(--spacing-xl);
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.folder-header {
  display: flex;
  gap: var(--spacing-lg);
  margin-bottom: var(--spacing-lg);
}

.folder-icon-wrapper {
  position: relative;
  flex-shrink: 0;
}

.folder-icon {
  width: 56px;
  height: 56px;
  background: linear-gradient(135deg, #f59e0b, #f97316);
  border-radius: var(--radius-lg);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 1.75rem;
  transition: all 0.3s ease;
  box-shadow: var(--shadow-md);
}

.folder-card:hover .folder-icon {
  transform: scale(1.1) rotate(5deg);
  box-shadow: var(--shadow-lg);
}

.folder-status-indicators {
  position: absolute;
  top: -4px;
  right: -4px;
  display: flex;
  gap: 4px;
}

.status-dot {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  border: 2px solid white;
  box-shadow: var(--shadow-sm);
}

.status-dot.files {
  background: var(--success);
}

.status-dot.subfolders {
  background: var(--info);
}

.folder-info {
  flex: 1;
}

.folder-name {
  margin: 0 0 var(--spacing-md) 0;
  font-size: 1.25rem;
  font-weight: 700;
  color: var(--text-primary);
  line-height: 1.3;
  transition: color 0.3s ease;
}

.folder-card:hover .folder-name {
  color: var(--primary);
}

.folder-meta {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.meta-row {
  display: flex;
  gap: var(--spacing-lg);
}

.meta-item {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  color: var(--text-secondary);
  font-size: 0.875rem;
  transition: color 0.3s ease;
}

.folder-card:hover .meta-item {
  color: var(--text-primary);
}

.meta-item i {
  color: var(--primary);
  width: 16px;
  font-size: 0.875rem;
  transition: transform 0.3s ease;
}

.folder-card:hover .meta-item i {
  transform: scale(1.1);
}

.folder-actions {
  display: flex;
  gap: var(--spacing-sm);
  margin-top: auto;
  position: relative;
  z-index: 10; /* Asegura que esté por encima del overlay */
  background: var(--bg-primary);
  padding: var(--spacing-md);
  border-radius: 0 0 var(--radius-xl) var(--radius-xl);
  border-top: 1px solid var(--border-light);
}

.action-btn {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-lg);
  font-size: 0.875rem;
  font-weight: 600;
  text-decoration: none;
  transition: all 0.3s ease;
  border: 2px solid transparent;
  flex: 1;
  justify-content: center;
  position: relative;
  overflow: hidden;
}

.action-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s ease;
}

.action-btn:hover::before {
  left: 100%;
}

.action-btn.primary {
  background: var(--primary);
  color: white;
  border-color: var(--primary);
}

.action-btn.primary:hover {
  background: var(--primary-dark);
  border-color: var(--primary-dark);
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.action-btn.secondary {
  background: var(--bg-primary);
  color: var(--text-secondary);
  border-color: var(--border-light);
}

.action-btn.secondary:hover {
  background: var(--primary);
  color: white;
  border-color: var(--primary);
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.card-hover-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 80px;
  background: linear-gradient(135deg, rgba(99, 102, 241, 0.98), rgba(79, 70, 229, 0.98));
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  visibility: hidden;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: var(--radius-xl) var(--radius-xl) 0 0;
  pointer-events: none;
}

.folder-card:hover .card-hover-overlay {
  opacity: 1;
  visibility: visible;
}

.overlay-content {
  text-align: center;
  color: white;
  transform: translateY(20px);
  transition: transform 0.4s ease;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-md);
}

.folder-card:hover .overlay-content {
  transform: translateY(0);
}

.overlay-icon {
  font-size: 3rem;
  margin-bottom: 0;
  opacity: 1;
  color: rgba(255, 255, 255, 0.9);
}

.overlay-content span {
  font-size: 1.125rem;
  font-weight: 600;
  opacity: 1;
  letter-spacing: 0.5px;
}

/* Modal */
.modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(4px);
}

.modal-content {
  background: var(--bg-primary);
  margin: 5% auto;
  border-radius: var(--radius-xl);
  width: 90%;
  max-width: 600px;
  box-shadow: var(--shadow-xl);
  animation: modalSlideIn 0.3s ease;
}

@keyframes modalSlideIn {
  from {
    opacity: 0;
    transform: translateY(-50px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-xl);
  border-bottom: 1px solid var(--border-light);
}

.modal-header h2 {
  margin: 0;
  font-size: 1.75rem;
  font-weight: 700;
  color: var(--text-primary);
}

.modal-close {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: var(--text-muted);
  padding: var(--spacing-sm);
  border-radius: 50%;
  transition: all 0.2s;
}

.modal-close:hover {
  background: var(--bg-secondary);
  color: var(--text-secondary);
}

.create-folder-form {
  padding: var(--spacing-xl);
}

.form-group {
  margin-bottom: var(--spacing-lg);
}

.form-group label {
  display: block;
  margin-bottom: var(--spacing-sm);
  font-weight: 600;
  color: var(--text-primary);
  font-size: 0.875rem;
}

.form-input,
.form-select,
.form-textarea {
  width: 100%;
  padding: var(--spacing-md);
  border: 2px solid var(--border-light);
  border-radius: var(--radius-md);
  font-size: 1rem;
  background: var(--bg-primary);
  transition: all 0.3s ease;
}

.form-input:focus,
.form-select:focus,
.form-textarea:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.1);
}

.form-textarea {
  resize: vertical;
  min-height: 80px;
}

.form-actions {
  display: flex;
  gap: var(--spacing-md);
  justify-content: flex-end;
  margin-top: var(--spacing-xl);
}

.btn-secondary {
  background: var(--bg-secondary);
  border: 2px solid var(--border-light);
  color: var(--text-secondary);
  padding: var(--spacing-md) var(--spacing-lg);
  border-radius: var(--radius-md);
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.btn-secondary:hover {
  background: var(--border-light);
  color: var(--text-primary);
}

.btn-primary {
  background: var(--primary);
  border: 2px solid var(--primary);
  color: white;
  padding: var(--spacing-md) var(--spacing-lg);
  border-radius: var(--radius-md);
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.btn-primary:hover {
  background: var(--primary-dark);
  border-color: var(--primary-dark);
  transform: translateY(-1px);
}

.folder-card.loading {
  animation: pulse 1.5s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@media (max-width: 1200px) {
  .folders-grid {
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  }
}

@media (max-width: 768px) {
  .folders-container {
    padding: var(--spacing-lg);
  }
  
  .header {
    flex-direction: column;
    gap: var(--spacing-lg);
    text-align: center;
    padding: var(--spacing-xl);
  }
  
  .header-main h1 {
    font-size: 2rem;
  }
  
  .header-stats {
    justify-content: center;
  }
  
  .body {
    padding: var(--spacing-xl);
  }
  
  .controls-row {
    flex-direction: column;
    gap: var(--spacing-lg);
  }
  
  .search-box {
    max-width: none;
  }
  
  .folders-grid {
    grid-template-columns: 1fr;
  }
  
  .card-actions {
    flex-direction: column;
  }
}

@media (max-width: 480px) {
  .header {
    padding: var(--spacing-lg);
  }
  
  .header-main h1 {
    font-size: 1.75rem;
  }
  
  .body {
    padding: var(--spacing-lg);
  }
  
  .folder-meta {
    gap: var(--spacing-xs);
  }
  
  .meta-item {
    font-size: 0.75rem;
  }
}
</style>

<script>
if (typeof window.globalSearchTimeout === 'undefined') {
  window.globalSearchTimeout = null;
}
if (typeof window.globalSelectedIndex === 'undefined') {
  window.globalSelectedIndex = -1;
}

document.addEventListener('DOMContentLoaded', initializeFolderFunctionality);
document.addEventListener('turbolinks:load', initializeFolderFunctionality);
document.addEventListener('turbolinks:render', initializeFolderFunctionality);

function initializeFolderFunctionality() {
  const mainContainer = document.querySelector('.folders-container');
  if (!mainContainer) {
    return;
  }
  
  try {
    cleanupExistingEventListeners();
    initializeFilters();
    initializeCreateModal();
    initializeFileSearch();
    addLoadingStates();
  } catch (error) {
    console.error('Error durante la inicialización:', error);
  }
}

function cleanupExistingEventListeners() {
  clearTimeout(window.globalSearchTimeout);
  window.globalSelectedIndex = -1;
  
  const searchInput = document.getElementById('fileSearchInput');
  if (searchInput) {
    const newSearchInput = searchInput.cloneNode(true);
    newSearchInput.value = '';
    searchInput.parentNode.replaceChild(newSearchInput, searchInput);
  }
  
  const searchClearBtn = document.getElementById('searchClearBtn');
  if (searchClearBtn) {
    const newClearBtn = searchClearBtn.cloneNode(true);
    newClearBtn.style.display = 'none';
    searchClearBtn.parentNode.replaceChild(newClearBtn, searchClearBtn);
  }
  
  const searchResults = document.getElementById('searchResults');
  if (searchResults) {
    searchResults.style.display = 'none';
  }
}

function addLoadingStates() {
  const folderCards = document.querySelectorAll('.folder-card');
  folderCards.forEach(card => {
    card.classList.add('loading');
    setTimeout(() => {
      card.classList.remove('loading');
    }, 500 + Math.random() * 1000);
  });
}

function initializeFilters() {
  const dropdownItems = document.querySelectorAll('.dropdown-item');
  const departmentGroups = document.querySelectorAll('.department-group');
  const selectorBtn = document.querySelector('.selector-btn');
  const selectedDepartmentSpan = document.getElementById('selectedDepartment');
  
  if (!dropdownItems.length || !departmentGroups.length) {
    return;
  }
  
  dropdownItems.forEach(item => {
    item.addEventListener('click', function() {
      const filterValue = this.dataset.filter;
      const itemName = this.querySelector('.item-name').textContent;
      
      // Actualizar botón selector
      selectedDepartmentSpan.textContent = itemName;
      selectorBtn.classList.remove('active');
      
      // Actualizar estado activo
      dropdownItems.forEach(i => i.classList.remove('active'));
      this.classList.add('active');
      
      // Cerrar dropdown
      closeDepartmentDropdown();
      
      // Filtrar departamentos
      if (filterValue === 'all') {
        departmentGroups.forEach(group => {
          group.style.display = 'block';
          group.style.animation = 'fadeIn 0.5s ease';
        });
      } else {
        departmentGroups.forEach(group => {
          if (group.dataset.department === filterValue) {
            group.style.display = 'block';
            group.style.animation = 'fadeIn 0.5s ease';
          } else {
            group.style.display = 'none';
          }
        });
      }
    });
  });
}

function initializeCreateModal() {
  const modal = document.getElementById('createFolderModal');
  if (!modal) return;
  
  window.openCreateModal = function() {
    modal.style.display = 'block';
    document.body.style.overflow = 'hidden';
  };
  
  window.closeCreateModal = function() {
    modal.style.display = 'none';
    document.body.style.overflow = 'auto';
  };
  
  window.addEventListener('click', function(e) {
    if (e.target === modal) {
      closeCreateModal();
    }
  });
}

function initializeFileSearch() {
  const searchInput = document.getElementById('fileSearchInput');
  const searchResults = document.getElementById('searchResults');
  const searchResultsList = document.getElementById('searchResultsList');
  const searchClearBtn = document.getElementById('searchClearBtn');
  
  if (!searchInput || !searchResults || !searchResultsList || !searchClearBtn) {
    return;
  }
  
  clearTimeout(window.globalSearchTimeout);
  window.globalSelectedIndex = -1;
  
  searchInput.addEventListener('input', function() {
    const query = this.value.trim();
    
    searchClearBtn.style.display = query ? 'block' : 'none';
    
    clearTimeout(window.globalSearchTimeout);
    
    if (query.length < 2) {
      closeSearchResults();
      return;
    }
    
    window.globalSearchTimeout = setTimeout(() => {
      performSearch(query);
    }, 300);
  });
  
  searchInput.addEventListener('keydown', function(e) {
    const results = searchResultsList.querySelectorAll('.search-result-item');
    
    switch(e.key) {
      case 'ArrowDown':
        e.preventDefault();
        window.globalSelectedIndex = Math.min(window.globalSelectedIndex + 1, results.length - 1);
        updateSelection(results);
        break;
      case 'ArrowUp':
        e.preventDefault();
        window.globalSelectedIndex = Math.max(window.globalSelectedIndex - 1, -1);
        updateSelection(results);
        break;
      case 'Enter':
        e.preventDefault();
        if (window.globalSelectedIndex >= 0 && results[window.globalSelectedIndex]) {
          navigateToFolder(results[window.globalSelectedIndex].dataset.folderId);
        } else if (searchResults.style.display !== 'none') {
          const firstResult = results[0];
          if (firstResult) {
            navigateToFolder(firstResult.dataset.folderId);
          }
        }
        break;
      case 'Escape':
        closeSearchResults();
        searchInput.blur();
        break;
    }
  });
  
  searchClearBtn.addEventListener('click', function() {
    searchInput.value = '';
    searchInput.focus();
    closeSearchResults();
    this.style.display = 'none';
  });
}

function updateSelection(results) {
  results.forEach((item, index) => {
    if (index === window.globalSelectedIndex) {
      item.classList.add('selected');
      item.scrollIntoView({ block: 'nearest' });
    } else {
      item.classList.remove('selected');
    }
  });
}

function performSearch(query) {
  fetch(`/documents/search?query=${encodeURIComponent(query)}`)
    .then(response => response.json())
    .then(data => {
      displaySearchResults(data.results || []);
    })
    .catch(error => {
      console.error('Error en la búsqueda:', error);
      displaySearchResults([]);
    });
}

function displaySearchResults(results) {
  const searchResults = document.getElementById('searchResults');
  const searchResultsList = document.getElementById('searchResultsList');
  
  if (!searchResults || !searchResultsList) {
    return;
  }
  
  if (results.length === 0) {
    searchResultsList.innerHTML = '<div class="search-result-item">No se encontraron resultados</div>';
    searchResults.style.display = 'block';
    return;
  }
  
  searchResultsList.innerHTML = results.map(result => `
    <div class="search-result-item" data-folder-id="${result.folder_id}" onclick="navigateToFolder('${result.folder_id}')">
      <i class="fas fa-file"></i>
      <div>
        <div><strong>${escapeHtml(result.name)}</strong></div>
        <div style="font-size: 0.75rem; color: #64748b;">En: ${escapeHtml(result.folder_name)}</div>
      </div>
    </div>
  `).join('');
  
  searchResults.style.display = 'block';
  window.globalSelectedIndex = -1;
}

function navigateToFolder(folderId) {
  window.location.href = `/folders/${folderId}`;
}

function closeSearchResults() {
  const searchResults = document.getElementById('searchResults');
  if (searchResults) {
    searchResults.style.display = 'none';
  }
  window.globalSelectedIndex = -1;
}

function escapeHtml(text) {
  const div = document.createElement('div');
  div.textContent = text;
  return div.innerHTML;
}

function toggleDepartmentDropdown() {
  const dropdown = document.getElementById('departmentDropdown');
  const selectorBtn = document.querySelector('.selector-btn');
  
  if (!dropdown || !selectorBtn) {
    return;
  }
  
  const isVisible = dropdown.classList.contains('show');
  
  if (isVisible) {
    closeDepartmentDropdown();
  } else {
    dropdown.classList.add('show');
    selectorBtn.classList.add('active');
  }
}

function closeDepartmentDropdown() {
  const dropdown = document.getElementById('departmentDropdown');
  const selectorBtn = document.querySelector('.selector-btn');
  
  if (!dropdown || !selectorBtn) {
    return;
  }
  
  dropdown.classList.remove('show');
  selectorBtn.classList.remove('active');
}

window.closeSearchResults = closeSearchResults;
window.toggleDepartmentDropdown = toggleDepartmentDropdown;
window.closeDepartmentDropdown = closeDepartmentDropdown;

document.addEventListener('turbolinks:before-visit', function() {
  clearTimeout(window.globalSearchTimeout);
  window.globalSelectedIndex = -1;
  const searchResults = document.getElementById('searchResults');
  if (searchResults) {
    searchResults.style.display = 'none';
  }
});

document.addEventListener('turbolinks:before-cache', function() {
  clearTimeout(window.globalSearchTimeout);
  window.globalSelectedIndex = -1;
  const searchResults = document.getElementById('searchResults');
  if (searchResults) {
    searchResults.style.display = 'none';
  }
});

document.addEventListener('beforeunload', function() {
  clearTimeout(window.globalSearchTimeout);
  const searchResults = document.getElementById('searchResults');
  if (searchResults) {
    searchResults.style.display = 'none';
  }
});

const style = document.createElement('style');
style.textContent = `
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .department-group {
    animation: fadeIn 0.5s ease;
  }
`;
document.head.appendChild(style);

document.addEventListener('click', function(e) {
  const selectorWrapper = document.querySelector('.selector-wrapper');
  if (selectorWrapper && !selectorWrapper.contains(e.target)) {
    closeDepartmentDropdown();
  }
});
</script>





